kind: Deployment
apiVersion: apps/v1
metadata:
  name: rocketmq-dashboard
  namespace: rocketmq
  labels:
    app: rocketmq-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rocketmq-dashboard
  template:
    metadata:
      labels:
        app: rocketmq-dashboard
    spec:
      containers:
        - name: rocketmq-dashboard
          image: 'apacherocketmq/rocketmq-dashboard:1.0.0'
          ports:
            - name: http-0
              containerPort: 8080
              protocol: TCP
          env:
            - name: JAVA_OPTS
              value: >-
                -Drocketmq.namesrv.addr=rocketmq-nameserver:9876
                -Dcom.rocketmq.sendMessageWithVIPChannel=false
            - name: NAMESRV_ADDR
              value: 'rocketmq-nameserver:9876'
          resources:
            limits:
              cpu: '4'
              memory: 4Gi
            requests:
              cpu: '0'
              memory: '0'
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      affinity: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  name: rocketmq-dashboard
  namespace: rocketmq
spec:
  type: ClusterIP
  ports:
    - name: dashboard
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: rocketmq-dashboard
---
apiVersion: v1
kind: Service
metadata:
  name: rocketmq-dashboard-nodeport
  namespace: rocketmq
spec:
  type: NodePort
  ports:
    - name: dashboard
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30080  # 指定的外部端口，范围通常在 30000-32767 之间
  selector:
    app: rocketmq-dashboard